/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */
declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


import {
  IonicButton as IonicButton
} from './components/ionic-button/ionic-button';

declare global {
  interface HTMLIonicButtonElement extends IonicButton, HTMLStencilElement {
  }
  var HTMLIonicButtonElement: {
    prototype: HTMLIonicButtonElement;
    new (): HTMLIonicButtonElement;
  };
  interface HTMLElementTagNameMap {
    "ionic-button": HTMLIonicButtonElement;
  }
  interface ElementTagNameMap {
    "ionic-button": HTMLIonicButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ionic-button": JSXElements.IonicButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface IonicButtonAttributes extends HTMLAttributes {
      color?: string;
      disabled?: boolean;
      type?: string;
    }
  }
}


import {
  IonicNewsletterSignup as IonicNewsletterSignup
} from './components/ionic-newsletter-signup/ionic-newsletter-signup';

declare global {
  interface HTMLIonicNewsletterSignupElement extends IonicNewsletterSignup, HTMLStencilElement {
  }
  var HTMLIonicNewsletterSignupElement: {
    prototype: HTMLIonicNewsletterSignupElement;
    new (): HTMLIonicNewsletterSignupElement;
  };
  interface HTMLElementTagNameMap {
    "ionic-newsletter-signup": HTMLIonicNewsletterSignupElement;
  }
  interface ElementTagNameMap {
    "ionic-newsletter-signup": HTMLIonicNewsletterSignupElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ionic-newsletter-signup": JSXElements.IonicNewsletterSignupAttributes;
    }
  }
  namespace JSXElements {
    export interface IonicNewsletterSignupAttributes extends HTMLAttributes {
      buttonText?: string;
      darkMode?: boolean;
      placeholder?: string;
    }
  }
}


import {
  IonicSnapBar as IonicSnapBar
} from './components/ionic-snap-bar/ionic-snap-bar';

declare global {
  interface HTMLIonicSnapBarElement extends IonicSnapBar, HTMLStencilElement {
  }
  var HTMLIonicSnapBarElement: {
    prototype: HTMLIonicSnapBarElement;
    new (): HTMLIonicSnapBarElement;
  };
  interface HTMLElementTagNameMap {
    "ionic-snap-bar": HTMLIonicSnapBarElement;
  }
  interface ElementTagNameMap {
    "ionic-snap-bar": HTMLIonicSnapBarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ionic-snap-bar": JSXElements.IonicSnapBarAttributes;
    }
  }
  namespace JSXElements {
    export interface IonicSnapBarAttributes extends HTMLAttributes {
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
